from aiogram.enums import ContentType
from aiogram.types import CallbackQuery, Message, User
from aiogram_dialog import Dialog, DialogManager, ShowMode, StartMode, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import (
    Button, Back, Cancel, Row, Start, SwitchTo
)
from aiogram_dialog.widgets.text import Const, Format

from db.requests import registrate_user, unregistrate_user
from fsm.fsm_dialogs import StartState, QuestionnaireState


async def username_getter(
        dialog_manager: DialogManager,
        event_from_user: User,
        **kwargs
):
    getter_data = {
        'username': event_from_user.first_name or 'Stranger',
        }
    return getter_data


async def first_name_handler(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager):
    if message.text.isalpha():
        dialog_manager.dialog_data["first_name"] = message.text
        print(dialog_manager.middleware_data)
        await dialog_manager.next()
    else:
        dialog_manager.show_mode = ShowMode.NO_UPDATE
        await message.answer(
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–ª–æ–≤–æ.\n'
                 '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ'
            )


async def guests_handler(
        message: Message,
        widget: MessageInput,
        dialog_manager: DialogManager,
) -> None:
    if message.text.isdigit() and 1 <= int(message.text) <= 5:
        dialog_manager.dialog_data["guests_number"] = message.text
        session = dialog_manager.middleware_data.get('session')
        user = dialog_manager.event.from_user.id
        await registrate_user(
            session, user, *dialog_manager.dialog_data.values()
            )
        await message.answer(
                text='üí´ –ù–∞—Ä–æ–¥–Ω–æ–µ –°–ª–∞–≤—è–Ω—Å–∫–æ–µ —Ä–∞–¥–∏–æ —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å '
                     '–Ω–∞ –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è!\n\n'
                     'üì® –í —Ç–µ–ª–µ–≥—Ä–∞–º–º —á–∞—Ç–µ "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ù–°–†" –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Ä–µ–º—è '
                     '–∏ –º–µ—Å—Ç–æ –Ω–∞—à–µ–π –≤—Å—Ç—Ä–µ—á–∏ –∏ —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –≤–æ–ø—Ä–æ—Å—ã.\n\n'
                     'https://t.me/+6WHU_-Cx5Lw3MjMy \n\n'
                     '‚ú® –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤—Å—Ç—Ä–µ—á–µ —Å –≤–∞–º–∏.\n'
                     '‚ú® –ë—ã—Ç—å –¥–æ–±—Ä—É!\n'
            )
        await dialog_manager.switch_to(QuestionnaireState.save,
                                       show_mode=ShowMode.SEND)
    else:
        dialog_manager.show_mode = ShowMode.NO_UPDATE
        await message.answer(
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π –æ—Ç 1 –¥–æ 5'
                 )


async def unregister(
        callback: CallbackQuery,
        button: Button,
        dialog_manager: DialogManager
) -> None:
    session = dialog_manager.middleware_data.get('session')
    user = dialog_manager.event.from_user.id
    await unregistrate_user(
        session, user,
        )
    await dialog_manager.switch_to(QuestionnaireState.fail_register)


questionnaire_dialog = Dialog(
    Window(
        Const('1. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ –Ω–∏–∫'),
        Cancel(Const('–û—Ç–º–µ–Ω–∞'), id='cancel'),
        MessageInput(
            func=first_name_handler,
            content_types=ContentType.TEXT,
        ),
        state=QuestionnaireState.nickname,
    ),
    Window(
        Const('2. –°–∫–æ–ª—å–∫–æ –≥–æ—Å—Ç–µ–π —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø—Ä–∏–π—Ç–∏, –≤–∫–ª—é—á–∞—è –≤–∞—Å?'),
        Const('–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5'),
        Row(
            Cancel(Const('–û—Ç–º–µ–Ω–∞'), id='cancel'),
            Back(Const('–ù–∞–∑–∞–¥'), id='back'),
        ),
        MessageInput(
            func=guests_handler,
            content_types=ContentType.TEXT,
        ),
        state=QuestionnaireState.guests_number,
    ),
    Window(
        Const('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?'),
        Row(
            Button(Const('–î–∞'), id='yes', on_click=unregister),
            SwitchTo(Const('–ù–µ—Ç'), id='no',
                     state=QuestionnaireState.fail_unregister),
            ),
        state=QuestionnaireState.unregister,
    ),
    Window(
        Const('–ù–∞–º –∂–∞–ª—å, —á—Ç–æ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏\n'
              '–ï—Å–ª–∏ –≤—Å–µ-—Ç–∞–∫–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–µ—Ö–∞—Ç—å, –≤—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ '
              '–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º –±–æ—Ç–µ.'),
        Start(Const('–ù–∞ —Å—Ç–∞—Ä—Ç'), id='start', state=StartState.start,
              mode=StartMode.RESET_STACK),
        state=QuestionnaireState.fail_register,
    ),
    Window(
        Const('–†–∞–¥—ã, —á—Ç–æ –≤—ã –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏\n'
              '–ï—Å–ª–∏ –≤—Å–µ-—Ç–∞–∫–∏ —Ä–µ—à–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, '
              '–≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞—Ä—Ç.'),
        Start(Const('–ù–∞ —Å—Ç–∞—Ä—Ç'), id='start', state=StartState.start,
              mode=StartMode.RESET_STACK),
        state=QuestionnaireState.fail_unregister,
    ),
    Window(
        Format('–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ä–µ–≥–∏—Å—Ç–∞—Ü–∏—é, {dialog_data[first_name]}!\n\n'
               '‚ú®–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ –∏–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏, '
               '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–º–µ–Ω–∏—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç–∞—Ü–∏—é.\n'
               '–≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º –º–µ–Ω—é –±–æ—Ç–∞.\n'),
        Start(Const('–ù–∞ —Å—Ç–∞—Ä—Ç'), id='start', state=StartState.start,
              mode=StartMode.RESET_STACK),
        state=QuestionnaireState.save,
        getter=username_getter
    ),
)
